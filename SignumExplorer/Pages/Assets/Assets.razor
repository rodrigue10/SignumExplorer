@namespace SignumExplorer.Pages

@page "/assets"

@inject ISignumDataService SignumService
@inject IStringLocalizer<App> L


<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
@if (count == null)
{

}
else
{   
 
    <MudGrid>
        <MudItem xs="12">                            <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField></MudItem>
        <MudItem xs="12">
            <MudTable RowsPerPage="100" ServerData="@(new Func<TableState, Task<TableData<IAsset>>>(ServerReload))" 
                    @ref="table" FixedHeader="true" Dense="true" Hover="true" Striped="true">
                <ToolBarContent>
                    <MudText Typo="Typo.h3">Assets</MudText>
                    <MudSpacer></MudSpacer>
                            <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
           
                                                      
                                         
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>
                        <MudTableSortLabel SortLabel="height_field" T="IAsset">
                            Creation Height
                        </MudTableSortLabel>
                        </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortLabel="name_field" T="IAsset">
                        <MudBadge Left="true" Icon="@Icons.Material.Filled.Help" Class="mx-6 my-4">Name</MudBadge>
                        </MudTableSortLabel></MudTh>
                        
                    <MudTh><MudTableSortLabel SortLabel="assetid_field" T="IAsset">
                            Asset ID
                        </MudTableSortLabel></MudTh>
                                        <MudTh><MudTableSortLabel SortLabel="quantity_field" T="IAsset">
                            Quantity
                        </MudTableSortLabel></MudTh>
                                                            <MudTh><MudTableSortLabel SortLabel="created_field" T="IAsset">
                            Created By
                        </MudTableSortLabel></MudTh>
                    <MudTh>Decimals</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Creation Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
                    <MudTd DataLabel="Name">
                         <MudTooltip >
                            <ChildContent> 
                                <MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.Id}")>@context.Name</MudLink>
                            </ChildContent>
                        <TooltipContent >
                            <MudPaper Width="250px" >
                                <MudText Typo="Typo.overline">@context.Description</MudText>
                            </MudPaper>                            
                        </TooltipContent> 
                        </MudTooltip>
                    </MudTd>
                    <MudTd DataLabel="Asset ID"><MudLink  Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.Id}")>@context.Id</MudLink>
                    </MudTd>
                    <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption">@context.Quantity.ToString("N0") </MudText></MudTd>
                    <MudTd DataLabel="Created By"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.AccountId}")>@context.AccountRS</MudLink></MudTd>
                    <MudTd DataLabel="Decimals"><MudText Typo="Typo.caption">@context.Decimals </MudText></MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    <MudText>No matching records found</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>Loading...</MudText>
                </LoadingContent>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        </MudItem>
        </MudGrid>
        }

</MudContainer>



@code {


    private IEnumerable<IAsset>? data;
    private MudTable<IAsset>? table;
    private int totalItems;
    private string searchString = "";
    private int? count;


    protected override async Task OnInitializedAsync()
    {

        count = await SignumService.AssetCount();

    }

    private async Task<TableData<IAsset>> ServerReload(TableState state)
    {

        totalItems = count.Value;

        var sortDir = (int)state.SortDirection;
        string? sortLabel = null;

        switch (state.SortLabel)
        {
            case "name_field":
                sortLabel = nameof(Asset.Name);
                break;
            case "height_field":
                sortLabel = nameof(Asset.Height);
                break;
            case "quantity_field":
                sortLabel = nameof(Asset.Quantity);
                break;
            case "created_field":
                sortLabel = nameof(Asset.AccountId);
                break;
            case "assetid_field":
                sortLabel = nameof(Asset.Id);
                break;
            default:
                sortLabel = "";
            break;

        }        
         data = await SignumService.GetFilteredSortedPagedAssets(searchString, sortLabel, state.Page, state.PageSize, sortDir );

        return new TableData<IAsset>() {TotalItems = totalItems, Items = data};
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }


}
