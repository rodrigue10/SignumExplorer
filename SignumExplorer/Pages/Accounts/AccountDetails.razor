@namespace SignumExplorer.Pages
@page "/accounts/{accountid}"

@inject ISignumDataService SignumService
@inject IJSRuntime JS
@inject IStringLocalizer<App> L
@inject IDialogService DialogService

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    @if (AccountDet == null ||
           
            AccountTrades == null ||
            accountCounts == null )
{
    <p><em>Loading Details...</em></p>
}
else
{
    <MudGrid>

        <MudItem xs="12">
               <PropertiesTable InputObject="AccountDet" InterfaceType="typeof(IAccount)" TableText="@($"{L["Account"]} {L["Details"]} - {AccountDet.AccountId}")"> </PropertiesTable>
            </MudItem>
            
    </MudGrid>
    <MudGrid>
    @if (rewardRecip == null ) 
    {
       
                <MudItem xs="12">
                    <MudText>Reward Recipient Not Set</MudText>

        </MudItem>

    }
    else
    {
   
                <MudItem xs="12">
                    <MudLink Typo="Typo.body2" Underline="Underline.None" Href=@($"/accounts/{rewardRecip.RecipId.ToString()}")>@("Reward Recipient: " + rewardRecip.RecipRS)</MudLink>

        </MudItem>
   

    }
        </MudGrid>

<MudTabs  Elevation="2" Rounded="true" Centered="true">
    <MudTabPanel  Icon="@Icons.Material.Filled.TransitEnterexit" ToolTip="Transactions"  BadgeData=@($"{accountCounts.AllTrans - accountCounts.MultiTrans}") BadgeColor="Color.Secondary">
        
        @if ( AccountDet == null)
        {
            <p><em>Loading Transactions ...</em></p>
        }
        else
        {  

            
            @if (accountCounts == null)
            {

            }
            else
            {   
 
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None" RowsPerPage="20" ServerData="@(new Func<TableState, Task<TableData<ITransaction>>>(ServerReload))" 
                                @ref="table" FixedHeader="true" Dense="true" Hover="true" Striped="true">
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">Transactions</MudText>
                                 <MudSpacer /> 
                                 <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search: Id, Height, Sender Id, Recipient Id" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                                         
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>
                                <MudTableSortLabel SortLabel="transid_field" T="ITransaction">
                                     Transaction ID
                                 </MudTableSortLabel></MudTh>

                                  <MudTh>
                                         <MudTableSortLabel SortLabel="height_field" T="ITransaction">
                                        Height
                                 </MudTableSortLabel>  </MudTh>   
                     
                                <MudTh>Date/Time</MudTh>

                                <MudTh>
                      
                                    Type
                      
                                </MudTh>

                                <MudTh>Amount</MudTh>
                                <MudTh>Fee</MudTh>
                                <MudTh>
                                <MudTableSortLabel SortLabel="sender_field" T="ITransaction">
                                Sender
                                </MudTableSortLabel></MudTh>
                                <MudTh></MudTh>
                                <MudTh><MudTableSortLabel SortLabel="recipient_field" T="ITransaction">
                                Recipient
                                </MudTableSortLabel></MudTh>
                            </HeaderContent>
                            <RowTemplate>
		
                                <MudTd DataLabel="Transaction ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/transactions/{context.Id}")>@context.Id.ToString().Truncate(10,true)</MudLink></MudTd>
                                <MudTd DataLabel="Block Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
                                <MudTd DataLabel="Date/Time"><MudText Typo="Typo.caption">@context.Time</MudText></MudTd>
                                <MudTd DataLabel="Type"><MudText Typo="Typo.caption">@context.TransactionType </MudText></MudTd>        
                                <MudTd DataLabel="Amount"><MudText Typo="Typo.caption">@context.Amount</MudText></MudTd>
                                <MudTd DataLabel="Fee"><MudText Typo="Typo.caption">@context.Fee </MudText></MudTd>

                                @if(@context.SenderId == AccountDet.AccountId)
                                        {
                                            <MudTd DataLabel="Sender"><MudText Typo="Typo.caption">(Account)</MudText></MudTd>
                                            <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Error" /></MudTd>
                                            if(context.RecipientId != null && context.RecipientId != 0 ){
                                                  <MudTd DataLabel="Recipient"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.RecipientId}")>@ReedSolomon.encode(context.RecipientId)</MudLink></MudTd>
                                            }
                                            else
                                            {
                                                <MudTd><MudText Typo="Typo.caption">@context.TransactionType </MudText></MudTd>
                                                
                                            }


                                              }
                                        else
                                        {
                                             if(context.SenderId != 0)
                                             {
                                                <MudTd DataLabel="Sender"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.SenderId}")>@ReedSolomon.encode(context.SenderId)</MudLink></MudTd>
                                             }
                                                                                         else
                                            {
                                                <MudTd><MudText Typo="Typo.caption">@context.TransactionType </MudText></MudTd>
                                            }

                                               <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Success" /></MudTd>
                                            <MudTd DataLabel="Recipient"><MudText Typo="Typo.caption">(Account)</MudText></MudTd>                                              

                                        }


                            </RowTemplate>                     
                            <NoRecordsContent>
                                <MudText>No matching records found</MudText>
                            </NoRecordsContent>
                            <LoadingContent>
                                <MudText>Loading...</MudText>
                            </LoadingContent>
                            <PagerContent>
                                <MudTablePager />
                            </PagerContent>
                        </MudTable>
                    </MudItem>
                    </MudGrid>
                    }







  

        }

   

    </MudTabPanel>
        <MudTabPanel Icon="@Icons.Material.Filled.DoubleArrow" ToolTip="Multi-Out" BadgeData=@($"{accountCounts.MultiTrans}") BadgeColor="Color.Secondary">

            
            
            @if (accountCounts == null)
            {

            }
            else
            {   
 
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable  HorizontalScrollbar="true" Breakpoint="Breakpoint.None"   RowsPerPage="20" ServerData="@(new Func<TableState, Task<TableData<ITransaction>>>(ServerReloadMulti))" 
                                @ref="multitable" FixedHeader="true" Dense="true" Hover="true" Striped="true">
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">Transactions</MudText>
                                 <MudSpacer /> 
                                 <MudTextField T="string" ValueChanged="@(s=>OnSearchMulti(s))" Placeholder="Search: Id, Height, Sender Id, Recipient Id" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                                         
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>
                                <MudTableSortLabel SortLabel="transid_field" T="ITransaction">
                                     Transaction ID
                                 </MudTableSortLabel></MudTh>

                                  <MudTh>
                                         <MudTableSortLabel SortLabel="height_field" T="ITransaction">
                                        Height
                                 </MudTableSortLabel>  </MudTh>   
                     
                                <MudTh>Date/Time</MudTh>

                                <MudTh>
                      
                                    Type
                      
                                </MudTh>

                                <MudTh>Amount</MudTh>
                                <MudTh>Fee</MudTh>
                                <MudTh>
                                <MudTableSortLabel SortLabel="sender_field" T="ITransaction">
                                Sender
                                </MudTableSortLabel></MudTh>
                                <MudTh></MudTh>
                                <MudTh><MudTableSortLabel SortLabel="recipient_field" T="ITransaction">
                                Details
                                </MudTableSortLabel></MudTh>
                            </HeaderContent>
                            <RowTemplate>
		
                                <MudTd DataLabel="Transaction ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/transactions/{context.Id}")>@context.Id.ToString().Truncate(10,true)</MudLink></MudTd>
                                <MudTd DataLabel="Block Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
                                <MudTd DataLabel="Date/Time"><MudText Typo="Typo.caption">@context.Time</MudText></MudTd>
                                <MudTd DataLabel="Type"><MudText Typo="Typo.caption">@context.TransactionType </MudText></MudTd>        
                                <MudTd DataLabel="Amount"><MudText Typo="Typo.caption">@context.Amount</MudText></MudTd>
                                <MudTd DataLabel="Fee"><MudText Typo="Typo.caption">@context.Fee </MudText></MudTd>
                                <MudTd DataLabel="Sender"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.SenderId}")>@ReedSolomon.encode(context.SenderId)</MudLink></MudTd>
                                            @if(@context.SenderId == AccountDet.AccountId)
                                        {
                                            <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Error" /></MudTd>

                                        }
                                        else
                                        {
                                               <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Success" /></MudTd>

                                        }
                                @*<MudTd DataLabel="Recipient"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.RecipientId}")>@ReedSolomon.encode(context.RecipientId.Value)</MudLink></MudTd>*@
                                <MudTd DataLabel="Details"><MudButton Size="Size.Small" OnClick="@((e) => OpenAttachDialog(context))" Variant="Variant.Filled" Color="Color.Primary">Details</MudButton></MudTd>
                            </RowTemplate>                     
                            <NoRecordsContent>
                                <MudText>No matching records found</MudText>
                            </NoRecordsContent>
                            <LoadingContent>
                                <MudText>Loading...</MudText>
                            </LoadingContent>
                            <PagerContent>
                                <MudTablePager />
                            </PagerContent>
                        </MudTable>
                    </MudItem>
                    </MudGrid>
                    }



        </MudTabPanel>
    <MudTabPanel Icon="@Icons.Material.Filled.Layers" ToolTip="Blocks" BadgeData="@accountCounts.ForgedBlocks.ToString()" BadgeColor="Color.Secondary">

        <BlocksTable AccountId=@AccountDet.AccountId />


    </MudTabPanel>
    <MudTabPanel Icon="@Icons.Material.Filled.GeneratingTokens" ToolTip="Assets">
        <MudTabs  Elevation="2" Rounded="true" Centered="true">







    <MudTabPanel Icon="@Icons.Material.Filled.GeneratingTokens" ToolTip="Assets" BadgeData=@accountCounts.AssetHoldings BadgeColor="Color.Secondary">

         @if (AccountAssets == null )
        {
            <p><em>Loading...</em></p>
        }
        else
        {  

  
            <MudItem xs="12">
          <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  RowsPerPage="50" Items="@AccountAssets" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Asset Holdings</MudText>
             
        </ToolBarContent>
        <HeaderContent>
                     <MudTh>Asset ID</MudTh>
                    <MudTh>Quantity</MudTh>
                    <MudTh>Unconfirmed Quantity</MudTh>
                    <MudTh>Since Height</MudTh>
                    <MudTh>% Holder (not working)</MudTh>



        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Asset ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetId.ToString().Truncate(10,true)</MudLink></MudTd>
            <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption">@context.Quantity</MudText></MudTd>      
            <MudTd DataLabel="UnconfirmedQuantity"><MudText Typo="Typo.caption"></MudText>@context.UnconfirmedQuantity</MudTd>
            <MudTd DataLabel="Since Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
            <MudTd DataLabel="% Holder"><MudText Typo="Typo.caption">@(context.Quantity/context.Quantity*100)</MudText></MudTd>
          
        
        </RowTemplate>
        <PagerContent>
            <MudTablePager  />
        </PagerContent>
            </MudTable>
            </MudItem>

        }
        

    </MudTabPanel>
 
        <MudTabPanel Icon="@Icons.Material.Filled.AlignVerticalCenter" ToolTip="Asset Trades" BadgeData="@accountCounts.AssetTrades.ToString()" BadgeColor="Color.Secondary">

                 @if (AccountTrades == null )
        {
            <p><em>Loading...</em></p>
        }
        else
        {  

  
            <MudItem xs="12">
          <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  RowsPerPage="50" Items="@AccountTrades" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Asset Trades</MudText>
             
        </ToolBarContent>
        <HeaderContent>
                    <MudTh>Date/Time</MudTh>
                    <MudTh>Asset ID</MudTh>
                    <MudTh>Quantity</MudTh>
                    <MudTh>Ask Order ID</MudTh>
                    <MudTh>Bid Order ID</MudTh>
                    <MudTh>Buyer</MudTh>
                    <MudTh>Seller</MudTh>
                    <MudTh>Height</MudTh>


        </HeaderContent>
        <RowTemplate>
             <MudTd DataLabel="Date/Time">@context.Time</MudTd>
            <MudTd DataLabel="Asset ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetId.ToString().Truncate(10,true)</MudLink></MudTd>
            <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption">@context.Quantity</MudText></MudTd>      
            <MudTd DataLabel="Ask Order ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/transactions/{context.AskOrderId}")>@context.AskOrderId</MudLink></MudTd>
            <MudTd DataLabel="Bid Order ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.BidOrderId}")>@context.BidOrderId</MudLink></MudTd>
            <MudTd DataLabel="Buyer"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.BuyerId}")>@context.BuyerRS</MudLink></MudTd>
            <MudTd DataLabel="Seller"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.SellerId}")>@context.SellerRS</MudLink></MudTd>
            <MudTd DataLabel="Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>

        
        </RowTemplate>
        <PagerContent>
            <MudTablePager  />
        </PagerContent>
            </MudTable>
            </MudItem>

        }

        </MudTabPanel>

    <MudTabPanel Icon="@Icons.Material.Filled.ReadMore" ToolTip="Asset Transfers" BadgeData="@accountCounts.AssetTransfers.ToString()" BadgeColor="Color.Secondary">

             @if (AccountAssetTransfers == null || AccountDet == null)
        {
            <p><em>Loading Assets Transfers ...</em></p>
        }
        else
        {  

  
            <MudItem xs="12">
          <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  RowsPerPage="50" Items="@AccountAssetTransfers" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Asset Transfers</MudText>
             
        </ToolBarContent>
        <HeaderContent>
                    <MudTh>Date/Time</MudTh>
                    <MudTh>Height</MudTh>
                    <MudTh>Asset ID</MudTh>
                    <MudTh>Quantity</MudTh>
                    <MudTh>Sender</MudTh>
                    <MudTh></MudTh>
                    <MudTh>Recipient</MudTh>



        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date/Time"><MudText Typo="Typo.caption">@context.Time</MudText></MudTd>
            <MudTd DataLabel="Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>

            <MudTd DataLabel="Asset ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetId</MudLink></MudTd>
            <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption">@context.Quantity</MudText></MudTd>      

            <MudTd DataLabel="Sender"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.SenderId}")>@context.SenderRS</MudLink></MudTd>
                        @if(@context.SenderId == AccountDet.AccountId)
                            {
                                <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Error" /></MudTd>

                            }
                            else
                            {
                                   <MudTd> <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Success" /></MudTd>

                            }


            <MudTd DataLabel="Recipient"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.RecipientId}")>@context.RecipientRS</MudLink></MudTd>

        
        </RowTemplate>
        <PagerContent>
            <MudTablePager  />
        </PagerContent>
            </MudTable>
            </MudItem>

        }

    </MudTabPanel>



        <MudTabPanel Icon="@Icons.Material.Filled.Sell" ToolTip="Open Orders" BadgeData="@accountCounts.TotalOrders.ToString()" BadgeColor="Color.Secondary">


            
           <MudGrid>
                    @if (AccountAsks == null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {   

                          <MudItem xs="12" sm="6">

                         <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  Items="@AccountAsks" FixedHeader="true" Dense="true" Height="350px" Hover="true" Bordered="false" Striped="true">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Ask Orders (@AccountAsks.Count())</MudText>
             
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>Asset</MudTh>
                             <MudTh>Asset Id</MudTh>
                             <MudTh>Total</MudTh>
                            <MudTh>Quantity</MudTh>
                            <MudTh>Price</MudTh>
        
       

                        </HeaderContent>
                        <RowTemplate >
                                                                     <MudTd>
                                             <MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetName</MudLink> 
                                         </MudTd>
  
                                     <MudTd DataLabel="Asset">
                                         <MudLink Typo="Typo.overline" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetId</MudLink>                                        
                                         
                                         </MudTd>
                                    <MudTd DataLabel="Total"><MudText Typo="Typo.caption">@(context.Price * context.Quantity/Math.Pow(10,8))   </MudText></MudTd>
                                            <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption"> @(context.Quantity/Math.Pow(10, context.Decimals.Value)) </MudText></MudTd> 
                                       <MudTd DataLabel="Price"><MudText Typo="Typo.caption"> @(context.Price/Math.Pow(10, (8 - context.Decimals.Value)))   </MudText></MudTd> 
       






                        </RowTemplate>
                    </MudTable>

                        </MudItem>
                    }
    
                    @if (AccountBids == null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {   
                            <MudItem xs="12" sm="6">

                        <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  Items="@AccountBids" FixedHeader="true" Height="350px" Dense="true" Hover="true" Bordered="false" Striped="true">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Bid Orders (@AccountBids.Count())</MudText>
             
                        </ToolBarContent>
                        <HeaderContent>

                             <MudTh>Price</MudTh>
                             <MudTh>Quantity</MudTh>
                            <MudTh>Total</MudTh>
                            <MudTh>Asset</MudTh>
                            <MudTh>Asset Id</MudTh>

                        </HeaderContent>
                        <RowTemplate >

                                       <MudTd DataLabel="Price"><MudText Typo="Typo.caption"> @(context.Price/Math.Pow(10, (8 - context.Decimals.Value)))   </MudText></MudTd> 
                                    <MudTd DataLabel="Quantity"><MudText Typo="Typo.caption"> @(context.Quantity/Math.Pow(10, context.Decimals.Value)) </MudText></MudTd>
                                    <MudTd DataLabel="Total"><MudText Typo="Typo.caption">@(context.Price * context.Quantity/Math.Pow(10,8))   </MudText></MudTd>
                                     <MudTd DataLabel="Asset"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetName</MudLink>
                                         
                                         </MudTd>
                                         <MudTd>
                                             <MudLink Typo="Typo.overline" Underline="Underline.None" Href=@($"/assets/{context.AssetId}")>@context.AssetId</MudLink> 
                                         </MudTd>
                 


                        </RowTemplate>

                    </MudTable>
                        </MudItem>
   
                     }
  </MudGrid>




            



        </MudTabPanel>


            </MudTabs>

    </MudTabPanel>
        
        <MudTabPanel Icon="@Icons.Material.Filled.Person" ToolTip="Aliases" BadgeData="@accountCounts.Aliases.ToString()" BadgeColor="Color.Secondary">
                    @if (AccountAliases == null)
        {
            <p><em>Loading Account Aliases ...</em></p>
        }
        else
        {  

  
            <MudItem xs="12">
          <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  RowsPerPage="50" Items="@AccountAliases" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Asset Trades</MudText>
             
        </ToolBarContent>
        <HeaderContent>

                    <MudTh>Date/Time</MudTh>
                    <MudTh>Alias Name Lower</MudTh>
                    <MudTh>Alias Name</MudTh>
                    <MudTh>Alias Uri</MudTh>
                    <MudTh>Height</MudTh>
                    <MudTh>Latest</MudTh>


        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date/Time">@context.Time</MudTd>
            <MudTd DataLabel="Alias Name Lower">@context.AliasNameLower</MudTd>
            <MudTd DataLabel="Alias Name"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/aliases/{context.Id}")>@context.AliasName</MudLink></MudTd>
            <MudTd DataLabel="Alias Uri">@context.AliasUri</MudTd>
            <MudTd DataLabel="Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
            <MudTd DataLabel="Latest">@context.Latest.Value</MudTd>

        
        </RowTemplate>
        <PagerContent>
            <MudTablePager  />
        </PagerContent>
            </MudTable>
            </MudItem>

        }
        </MudTabPanel>

                        <MudTabPanel Icon="@Icons.Material.Filled.Water" ToolTip="Pool Members" BadgeData="@accountCounts.PoolMembers.ToString()" BadgeColor="Color.Secondary">
           



                         @if (poolMembers == null ) 
                        {
                            <p><em>Loading...</em></p>
                        }
                        else
                        {
                            <MudGrid>                                                    
                                <MudItem xs="12">
                                        <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None" Items="@poolMembers" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
                                        <ToolBarContent>
                                            <MudText Typo="Typo.h6">Pool Members</MudText>
                                        </ToolBarContent>
                                            <HeaderContent>
                                            <MudTh>Ask Height</MudTh>
                                            <MudTh>Account</MudTh>
                                            <MudTh>From Height</MudTh>
                                            </HeaderContent>
                                            <RowTemplate>
                                            <MudTd DataLabel="Ask Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
                                            <MudTd DataLabel="Account"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.AccountId}")>@context.AccountRS</MudLink></MudTd>
                                            <MudTd DataLabel="From Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.FromHeight}")>@context.FromHeight</MudLink></MudTd>

                                            </RowTemplate>
                                        <PagerContent>
                                            <MudTablePager />
                                        </PagerContent>
                                        </MudTable>
                                </MudItem>
                            </MudGrid>
                        }

                </MudTabPanel>
                 <MudTabPanel Icon="@Icons.Material.Filled.Receipt" ToolTip="Smart Contracts" BadgeData="@accountCounts.Ats.ToString()" BadgeColor="Color.Secondary">
           



                         @if (AccountAts == null ) 
                        {
                            <p><em>Loading...</em></p>
                        }
                        else
                        {
                            <MudGrid>                                                    
                                <MudItem xs="12">
                                        <MudTable HorizontalScrollbar="true" Breakpoint="Breakpoint.None"  Items="@AccountAts" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
                                        <ToolBarContent>
                                            <MudText Typo="Typo.h6">Pool Members</MudText>
                                        </ToolBarContent>
                                            <HeaderContent>
                                            <MudTh>Height</MudTh>
                                            <MudTh>Name</MudTh>
                                            <MudTh>At Id</MudTh>
                                            <MudTh>At RS</MudTh>
                                            <MudTh>Description</MudTh>
                                            <MudTh>Latest</MudTh>
                                            </HeaderContent>
                                            <RowTemplate>
		                                     <MudTd DataLabel="Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{(long)context.Height}")>@context.Height</MudLink></MudTd>
                                            <MudTd DataLabel="Name"><MudText Typo="Typo.caption">@context.Name</MudText></MudTd>
                                            <MudTd DataLabel="At Id">   <MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/ats/{context.Id}")>@context.Id</MudLink> </MudTd>
                                            <MudTd DataLabel="At RS"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/ats/{context.Id}")>@context.AtIdRS</MudLink></MudTd>
                                            <MudTd DataLabel="Description"><MudText Typo="Typo.caption">@context.Description</MudText></MudTd>
                                            <MudTd DataLabel="Latest"><MudText Typo="Typo.caption">@context.Latest</MudText></MudTd>

                                            </RowTemplate>
                                        <PagerContent>
                                            <MudTablePager />
                                        </PagerContent>
                                        </MudTable>
                                </MudItem>
                            </MudGrid>
                        }

                </MudTabPanel>
 


</MudTabs>
}

</MudContainer>



@code {
    private IEnumerable<ITrade>? AccountTrades;
    private IEnumerable<IBidOrder>? AccountBids;
    private IEnumerable<IAskOrder>? AccountAsks;
    private IEnumerable<IAssetTransfer>? AccountAssetTransfers;
    private IAccount? AccountDet;
   // private List<ITransaction>? AccountTransactions;
    private IEnumerable<IAccountAsset>? AccountAssets;
    private IEnumerable<IAlias>? AccountAliases;
    private IEnumerable<IAt>? AccountAts;


    private IEnumerable<IRewardRecipAssign>? poolMembers;
    private IRewardRecipAssign? rewardRecip;


    private AccountCounts? accountCounts;

    private IEnumerable<ITransaction>? data;
    private MudTable<ITransaction>? table;
    private int totalItems;
    private string searchString = "";
    private long account;

    //Multi-Out
        private IEnumerable<ITransaction>? multidata;
    private MudTable<ITransaction>? multitable;
    private int multitotalItems;
    private string multisearchString = "";



    [Parameter]
    public string? Accountid { get; set; }

    protected override async Task OnParametersSetAsync()
    {


        account = new long();
        AccountDet = null;
        AccountTrades = null;
        accountCounts = null;
        AccountAssets = null;
        poolMembers = null;
        AccountAssetTransfers = null;
        AccountAliases = null;
        AccountAsks = null;
        AccountBids = null;
        rewardRecip = null;
        AccountAts = null;


        await OnInitializedAsync();
         //await base.OnParametersSetAsync();
 
    }

    protected override async Task OnInitializedAsync()
    {
        if(Accountid != null)
        {
                   account = (long)UInt64.Parse(Accountid);

                accountCounts = await SignumService.AccountCountItems(account);
                AccountDet = await SignumService.GetAccount(account);
                AccountTrades = await SignumService.GetAccountTrades(account);
                AccountAssets = await SignumService.GetAccountAssets(account);
                AccountAssetTransfers = await SignumService.GetAccountAssetTransfers(account);
                AccountAliases = await SignumService.GetAccountAliases(account);
                AccountAsks = await SignumService.GetAccountAskOrders(account); 
                AccountBids = await SignumService.GetAccountBidOrders(account);
                poolMembers = await SignumService.GetPoolAccountMembers(account);
                rewardRecip = await SignumService.GetAccountRewardRecipient(account);
                AccountAts = await SignumService.GetAccountCreatedAts(account);             



        }



    }

 

 

     private async Task<TableData<ITransaction>> ServerReload(TableState state)
    {
        
        totalItems = accountCounts.AllTrans - accountCounts.MultiTrans;


        var sortDir = (int)state.SortDirection;
        string? sortLabel = null;

        switch (state.SortLabel)
        {

            case "height_field":
                sortLabel = nameof(ITransaction.Height);
                break;
                            case "transid_field":
                sortLabel = nameof(ITransaction.Id);
                break;
                                           case "sender_field":
                sortLabel = nameof(ITransaction.SenderId);
                break;
                                            case "recipient_field":
                sortLabel = nameof(ITransaction.RecipientId);
                break;

            default:
                sortLabel = "";
            break;

        }        
         data = await SignumService.GetFilteredSortedPagedAccountTransactions(account, searchString, sortLabel, state.Page, state.PageSize, sortDir );

        return new TableData<ITransaction>() {TotalItems = totalItems, Items = data};
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }

         private async Task<TableData<ITransaction>> ServerReloadMulti(TableState state)
    {
        
        multitotalItems = accountCounts.MultiTrans;


        var sortDir = (int)state.SortDirection;
        string? sortLabel = null;

        switch (state.SortLabel)
        {

            case "height_field":
                sortLabel = nameof(ITransaction.Height);
                break;
                            case "transid_field":
                sortLabel = nameof(ITransaction.Id);
                break;
                                           case "sender_field":
                sortLabel = nameof(ITransaction.SenderId);
                break;
                //                            case "recipient_field":
                //sortLabel = nameof(ITransaction.RecipientId);
                //break;

            default:
                sortLabel = "";
            break;

        }        
         multidata = await SignumService.GetFilteredSortedPagedAccountMultiOut(account, multisearchString, sortLabel, state.Page, state.PageSize, sortDir );

        return new TableData<ITransaction>() {TotalItems = multitotalItems, Items = multidata};
    }

    private void OnSearchMulti(string text)
    {
        multisearchString = text;
        multitable.ReloadServerData();
    }

        async Task OpenAttachDialog(ITransaction transaction)
    {
        var info = typeof(ITransaction).GetProperty("AttachmentBytes");

        if(transaction != null)
        {
            var parameters = new DialogParameters { ["propinfo"] = info, ["inputobject"] = transaction };


            var result = await DialogService.Show<AttachmentDialog>(info.Name, parameters).Result;          

        }



    }





}

