@namespace SignumExplorer.Pages

@page "/blocks/{blockid}"
@page "/blocksheight/{blockheight:int}"
@inject ISignumDataService SignumService
@inject IJSRuntime JS
@inject IStringLocalizer<App> L



 @if (BlockDet == null)
        {
            <p><em>Loading Details...</em></p>
        }
        else
{ 
<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">

    <MudGrid>
        <MudItem xs="12">
                <PropertiesTable TableText="@($"{L["Block"]} {L["Details"]} - {BlockDet.Id}")" InputObject="BlockDet" InterfaceType="typeof(IBlock)"></PropertiesTable>
        </MudItem>
    </MudGrid>



<MudTabs  Elevation="2" Rounded="true" Centered="true">
    <MudTabPanel Icon="@Icons.Material.Filled.TransitEnterexit" ToolTip="Transactions"  BadgeData=@($"{BlockDet.Transactions.Count}") BadgeColor="Color.Secondary">

        @if (BlockDet.Transactions  == null )
        {
            <p><em>Loading ...</em></p>
        }
        else
        {  

  
            <MudItem xs="12">
          <MudTable RowsPerPage="50" Items="@BlockDet.Transactions" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Transactions</MudText>
             
        </ToolBarContent>
        <HeaderContent>
                     <MudTh>Transaction ID</MudTh>
                     <MudTh>Height</MudTh>
                    <MudTh>Date/Time</MudTh>
                    <MudTh>Type</MudTh>
                    <MudTh>Amount</MudTh>
                    <MudTh>Fee</MudTh>
                    <MudTh>Sender</MudTh>
                    <MudTh>Recipient</MudTh>

        </HeaderContent>
        <RowTemplate>

                    <MudTd DataLabel="Transaction ID"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/transactions/{context.Id}")>@context.Id.ToString().Truncate(10,true)</MudLink></MudTd>
                    <MudTd DataLabel="Block Height"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/blocksheight/{context.Height}")>@context.Height</MudLink></MudTd>
                    <MudTd DataLabel="Date/Time"><MudText Typo="Typo.caption">@context.Time</MudText></MudTd>
                    <MudTd DataLabel="Type"><MudText Typo="Typo.caption">@context.TransactionType </MudText></MudTd>        
                    <MudTd DataLabel="Amount"><MudText Typo="Typo.caption">@context.Amount</MudText></MudTd>
                    <MudTd DataLabel="Fee"><MudText Typo="Typo.caption">@context.Fee </MudText></MudTd>
                    <MudTd DataLabel="Sender"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.SenderId}")>@ReedSolomon.encode(context.SenderId)</MudLink></MudTd>
                    <MudTd DataLabel="Recipient"><MudLink Typo="Typo.caption" Underline="Underline.None" Href=@($"/accounts/{context.RecipientId}")>@ReedSolomon.encode(context.RecipientId.Value)</MudLink></MudTd>
        
        </RowTemplate>
        <PagerContent>
            <MudTablePager  />
        </PagerContent>
            </MudTable>
            </MudItem>

        }

   

    </MudTabPanel>
    </MudTabs>
</MudContainer>

}


@code {

    private IBlock? BlockDet;



    [Parameter]
    public string? Blockid { get; set; }
        [Parameter]
    public int? Blockheight { get; set; }

        protected override async Task OnParametersSetAsync()
    {
               await OnInitializedAsync();
       await base.OnParametersSetAsync();
 
    }

    protected override async Task OnInitializedAsync()
    {
        if(Blockid != null)
        {
                    //BlockDet = await SignumService.GetBlock((long)UInt64.Parse(Blockid));
                    BlockDet = await SignumService.GetBlock((long)UInt64.Parse(Blockid));
        }
        else if(Blockheight != null)
        {
                  BlockDet = await SignumService.GetBlockHeight((int)Blockheight);
        }




    }



}