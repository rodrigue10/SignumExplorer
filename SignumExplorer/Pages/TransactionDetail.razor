@page "/transactions/{transid}"

@inject ISignumDataService SignumService

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">

    @if (TransDetail == null)
{
    <p><em>Loading Details...</em></p>
}
else
{   
<MudGrid>
    <MudItem xs="12">
         <MudTable Items="@typeof(ITransaction).GetProperties()"  FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true" Breakpoint="Breakpoint.None">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Transaction Details</MudText>             
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Property</MudTh>
        <MudTh>Details</MudTh>
    </HeaderContent>
                <RowTemplate>                    
                    <MudTd DataLabel="Property">@context.Name</MudTd>
                    <MudTd DataLabel="Detail">@context.GetValue(TransDetail)</MudTd>
                </RowTemplate> 
        </MudTable>
    </MudItem>
</MudGrid>
}
</MudContainer>




@code {
    private ITransaction? TransDetail;


        [Parameter]
    public string? Transid { get; set; }

    protected override async Task OnInitializedAsync()
    { 
        if (Transid != null)
        {
            TransDetail = await SignumService.GetTransaction((long)UInt64.Parse(Transid));

        }
    }





}
